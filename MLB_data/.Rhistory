index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
if(index == 0) {
name = paste(name, collapse = " ")
for(df in names(espn.list)) {
csv.file = gsub(".csv", "", df)
csv.file = gsub("\\.-", "\\.", csv.file)
csv.file = gsub("-", "\\.", csv.file)
csv.file = unlist(strsplit(csv.file, split = "\\."))
if(all(sapply(csv.file, function(x) {
grepl(x, name, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
}
tryCatch ({
player.df = espn.list[[index]]
roto.file[i,]$Variance = var(player.df$Points)
}, error = function(e) {
print(name)
})
}
return(roto.file)
}
a = merge.files(hitter.list, hitters)
a
merge.files = function(espn.list,
roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
name = unlist(strsplit(roto.file[i,]$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
if(index == 0) {
name = paste(name, collapse = " ")
for(df in names(espn.list)) {
csv.file = gsub(".csv", "", df)
csv.file = gsub("\\.-", "\\.", csv.file)
csv.file = gsub("-", "\\.", csv.file)
csv.file = unlist(strsplit(csv.file, split = "\\."))
if(all(sapply(csv.file, function(x) {
grepl(x, name, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
}
tryCatch ({
player.df = espn.list[[index]]
roto.file[i,]$Variance = var(player.df$Points)
}, error = function(e) {})
}
return(roto.file)
}
a = merge.files(hitter.list, hitters)
a
df = hitter.list[["alex-bregman.csv"]]
df
var(df$Points)
df = hitter.list[["j.t.-riddle.csv"]]
var(df$Points)
merge.files = function(espn.list,
roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
name = unlist(strsplit(roto.file[i,]$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
if(index == 0) {
name = paste(name, collapse = " ")
for(df in names(espn.list)) {
csv.file = gsub(".csv", "", df)
csv.file = gsub("\\.-", "\\.", csv.file)
csv.file = gsub("-", "\\.", csv.file)
csv.file = unlist(strsplit(csv.file, split = "\\."))
if(all(sapply(csv.file, function(x) {
grepl(x, name, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
}
tryCatch ({
player.df = espn.list[[index]]
roto.file[i,]$Variance = var(player.df$Points)
}, error = function(e) {})
}
return(roto.file)
}
hitters = merge.file(hitter.list,
hitters)
pitchers = merge.file(pitcher.list,
pitchers)
hitters = merge.files(hitter.list,
hitters)
pitchers = merge.files(pitcher.list,
pitchers)
head(hitters)
head(pitchers)
sqrt(103)
View(pitchers)
View(hitters)
sqrt(163)
sqrt(151)
df = hitter.list[[1]]
hist(hitter.list[[1]]$Points)
hist(hitter.list[[2]]$Points)
hist(hitter.list[[3]]$Points)
hist(hitter.list[[4]]$Points)
hist(hitter.list[[45]$Points)
hist(hitter.list[[5]]$Points)
hist(hitter.list[[6]]$Points)
hist(hitter.list[[7]]$Points)
hist(hitter.list[[8]]$Points)
hist(hitter.list[[100]]$Points)
hist(hitter.list[[200]]$Points)
hist(hitter.list[[300]]$Points)
hist(hitter.list[[400]]$Points)
hist(hitter.list[[500]]$Points)
hist(hitter.list[[230]]$Points)
hist(hitter.list[[120]]$Points)
hist(hitter.list[[140]]$Points)
hist(pithcer.list[[140]]$Points)
hist(pitcher.list[[140]]$Points)
hist(pitcher.list[[200]]$Points)
hist(pitcher.list[[100]]$Points)
hist(pitcher.list[[300]]$Points)
hist(pitcher.list[[450]]$Points)
hist(pitcher.list[[210]]$Points)
hist(pitcher.list[[35]]$Points)
hist(pitcher.list[[38]]$Points)
hist(pitcher.list[[90]]$Points)
head(pitchers)
head(pitcher.list[["gio-gonzalez.csv"]])
hist(pitcher.list[["gio-gonzalez.csv"]]$Points)
hist(pitcher.list[["jake-odorizzi.csv"]]$Points)
roto.file[i,]$Variance = var(player.df$Points)
fetch.stats = function(espn.list,
roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
name = unlist(strsplit(roto.file[i,]$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
if(index == 0) {
name = paste(name, collapse = " ")
for(df in names(espn.list)) {
csv.file = gsub(".csv", "", df)
csv.file = gsub("\\.-", "\\.", csv.file)
csv.file = gsub("-", "\\.", csv.file)
csv.file = unlist(strsplit(csv.file, split = "\\."))
if(all(sapply(csv.file, function(x) {
grepl(x, name, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
}
tryCatch ({
player.df = espn.list[[index]]
return(player.df)
}, error = function(e) {})
}
return(NA)
}
fetch.files = function(espn.list,
player.profile) {
name = unlist(strsplit(player.profile[i,]$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
if(index == 0) {
name = paste(name, collapse = " ")
for(df in names(espn.list)) {
csv.file = gsub(".csv", "", df)
csv.file = gsub("\\.-", "\\.", csv.file)
csv.file = gsub("-", "\\.", csv.file)
csv.file = unlist(strsplit(csv.file, split = "\\."))
if(all(sapply(csv.file, function(x) {
grepl(x, name, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
}
tryCatch ({
player.df = espn.list[[index]]
return(player.df)
}, error = function(e) {})
return(NA)
}
fetch.files(hitter.list, hitters[1,])
player.profile = hitters[1,]
player.profile
name = unlist(strsplit(player.profile[i,]$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
espn.list = hitter.list
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
names(hitter.list)
merge.files = function(espn.list,
roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
name = unlist(strsplit(roto.file[i,]$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
if(index == 0) {
name = paste(name, collapse = " ")
for(df in names(espn.list)) {
csv.file = gsub(".csv", "", df)
csv.file = gsub("\\.-", "\\.", csv.file)
csv.file = gsub("-", "\\.", csv.file)
csv.file = unlist(strsplit(csv.file, split = "\\."))
if(all(sapply(csv.file, function(x) {
grepl(x, name, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
}
tryCatch ({
player.df = espn.list[[index]]
roto.file[i,]$Variance = var(player.df$Points)
}, error = function(e) {})
}
return(roto.file)
}
hitters = merge.files(hitter.list,
hitters)
roto.file = hitters
i = 1
name = unlist(strsplit(roto.file[i,]$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
fetch.files = function(espn.list,
player.profile) {
name = unlist(strsplit(player.profile$Name, split = " "))
index = 0
for(df in names(espn.list)) {
if(all(sapply(name, function(x) {
grepl(x, df, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
if(index == 0) {
name = paste(name, collapse = " ")
for(df in names(espn.list)) {
csv.file = gsub(".csv", "", df)
csv.file = gsub("\\.-", "\\.", csv.file)
csv.file = gsub("-", "\\.", csv.file)
csv.file = unlist(strsplit(csv.file, split = "\\."))
if(all(sapply(csv.file, function(x) {
grepl(x, name, ignore.case = T)
}))) {
index = which(names(espn.list) == df)
}
}
}
tryCatch ({
player.df = espn.list[[index]]
return(player.df)
}, error = function(e) {})
return(NA)
}
fetch.files(hitter.list, hitters)
fetch.files(hitter.list, hitters[1,])
hitters[1,]
hitter.list("alex-bregman.csv")
hitter.list[["alex-bregman.csv"]]
fetch.files(hitter.list, hitters[1,])
fetch.files(hitter.list, hitters[12,])
hitters[12,]
hitter.list[["joey-gallo.csv"]]
head(hitters)
hitters = players[["hitters"]]
pitchers = players[["pitchers"]]
head(hitters)
get.var = function(espn.list, roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
roto.file$Variance = fetch.files(espn.list, roto.file[i,])
}
return(roto.file)
}
hitters = get.var(hitter.list, hitters)
get.var = function(espn.list, roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
df = fetch.files(espn.list, roto.file[i,])
roto.file$Variance = var(df$Points)
}
return(roto.file)
}
hitters = get.var(hitter.list, hitters)
df = fetch.files(hitters.list, hitters[1,])
df = fetch.files(hitter.list, hitters[1,])
df
df$Points
var(df$Points)
get.var = function(espn.list, roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
df = fetch.files(espn.list, roto.file[i,])
roto.file[i,]$Variance = var(df$Points)
}
return(roto.file)
}
hitters = get.var(hitter.list, hitters)
hitters$Variance = NA
hitters
hitters[1,]$Variance = 2
head(hitters)
get.var = function(espn.list, roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
df = fetch.files(espn.list, roto.file[i,])
roto.file[i,]$Variance = var(df$Points)
print("yes")
}
return(roto.file)
}
a = get.var(hitter.list, hitters)
get.var = function(espn.list, roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
df = fetch.files(espn.list, roto.file[i,])
roto.file[i,]$Variance = var(df$Points)
print(i)
}
return(roto.file)
}
a = get.var(hitter.list, hitters)
hitters[30,]
hitters[31,]
get.var = function(espn.list, roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
tryCatch ({
df = fetch.files(espn.list, roto.file[i,])
roto.file[i,]$Variance = var(df$Points)
}, error = function(e) {})
}
return(roto.file)
}
head(hitters)
hitters = players[["hitters"]]
pitchers = players[["pitchers"]]
hitters = get.var(hitter.list, hitters)
hitters
hitters = players[["hitters"]]
pitchers = players[["pitchers"]]
get.sd = function(espn.list, roto.file) {
roto.file$Variance = NA
for(i in 1:nrow(roto.file)) {
tryCatch ({
df = fetch.files(espn.list, roto.file[i,])
roto.file[i,]$Sigma = sd(df$Points)
}, error = function(e) {})
}
return(roto.file)
}
hitters = get.sd(hitter.list, hitters)
pitchers = get.sd(pitcher.list, pitchers)
head(hitters)
hitters = players[["hitters"]]
pitchers = players[["pitchers"]]
get.sd = function(espn.list, roto.file) {
roto.file$Sigma = NA
for(i in 1:nrow(roto.file)) {
tryCatch ({
df = fetch.files(espn.list, roto.file[i,])
roto.file[i,]$Sigma = sd(df$Points)
}, error = function(e) {})
}
return(roto.file)
}
hitters = get.sd(hitter.list, hitters)
pitchers = get.sd(pitcher.list, pitchers)
head(hitters)
head(pitchers)
rep(0,10)
b = fetch.files(hitter.list, hitters[5,])
b
c = fetch.files(hitter.list, hitters[6,])
c
b = b[,c("Date", "Points")]
b = b[,c(1, ncol(b))]
b
c = c[,c(1, ncol(c))]
c
merge(b, c, by = "Date")
d = merge(b, c, by = "DATE")
d
cor(d$Points.x, d$Points.y)
e = fetch.files(hitter.list, hitters[8,])
e = e[,c("DATE", "Points")]
e
get.cov = function(espn.list, roto.file) {
width = nrow(roto.file)
covariances = matrix(rep(0, width^2), nrow = width)
for(i in 1:width) {
for(j in 1:width) {
if(i == j) {
covariances[i, j] = 0
}
else {
player.1 = fetch.files(espn.list, roto.file[i,])
player.2 = fetch.files(espn.list, roto.file[j,])
tryCatch ({
player.1 = player.1[,c("DATE","Points")]
player.2 = player.2[,c("DATE","Points")]
merged.players = merge(player.1,
player.2,
by = "DATE")
covariances[i, j] = cor(merged.players$Points.x,
merged.players$Points.y)
}, error = function(e) {})
}
}
}
return(covariances)
}
covariances = get.cov(hitter.list, hitters)
hitters[6,]
get.cov = function(espn.list, roto.file) {
width = nrow(roto.file)
covariances = matrix(rep(0, width^2), nrow = width)
for(i in 1:width) {
for(j in 1:width) {
if(i == j | roto.file[i,]$Team != roto.file[j,]$Team) {
covariances[i, j] = 0
}
else {
player.1 = fetch.files(espn.list, roto.file[i,])
player.2 = fetch.files(espn.list, roto.file[j,])
tryCatch ({
player.1 = player.1[,c("DATE","Points")]
player.2 = player.2[,c("DATE","Points")]
merged.players = merge(player.1,
player.2,
by = "DATE")
covariances[i, j] = cor(merged.players$Points.x,
merged.players$Points.y)
}, error = function(e) {})
}
}
}
return(covariances)
}
covariances = get.cov(hitter.list, hitters)
covariances
dim(covariances)
covariances[1,]
covariances[2,]
covariances[3,]
